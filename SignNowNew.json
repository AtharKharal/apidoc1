{
  "openapi": "3.0.0",
  "info": {
    "title": "SignNow API",
    "description": "This collection provides a complete list of all available **SignNow eSignature API** requests, including **authorization, sending signature invites, creating templates, managing documents, and embedding eSignature workflows** into your applications. It’s designed to help you explore, test, and integrate SignNow’s full range of eSignature capabilities with ease.\n\n### Get Started 🚀\n\n- **Free Sandbox Account**: [Sign up here](https://app.signnow.com/webapp) to start testing.\n    \n- **API Documentation**: Full reference guide [here](https://docs.signnow.com/docs/signnow/welcome).\n    \n- **Release Notes**: Stay updated on API changes [here](https://www.signnow.com/release-notes/signnow-api).\n    \n- **GitHub**: Explore SDKs and code samples on [GitHub](https://github.com/signnow).",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://{{url}}"
    }
  ],
  "components": {
    "securitySchemes": {
      "noauthAuth": {
        "type": "http",
        "scheme": "noauth"
      }
    }
  },
  "tags": [
    {
      "name": "Invites workflows",
      "description": "This folder contains the most popular **paid invite** endpoints, helping you manage eSignature workflows efficiently. It includes:\n\n- **Standard & Field Invites** – Send invites with or without predefined fields.\n    \n- **Bulk Invites** – Send multiple invites at once to streamline large-scale signing.\n    \n- **Signing Links** – Generate one-time signing links for quick access.\n    \n- **Document Group Invites** – Manage signature invites for grouped documents.\n    \n- **Embedded Signing, Sending & Editor** – Enable seamless signing, sending, and document editing within your app.\n    \n\nUse these requests to simplify and automate your **eSignature** process! 🚀"
    },
    {
      "name": "Invites workflows > Invite to Sign (with fields)",
      "description": "An Invite to sign a document is sent via email. The document has fields that need to be completed. The invite is role-based: you can set up a multi-step process with different people processing a document at different steps."
    },
    {
      "name": "Invites workflows > Free form Invite (without fields)",
      "description": "An Invite to sign a document is sent via email. The document doesn’t have fields and signers can add their signature anywhere in the document."
    },
    {
      "name": "Invites workflows > Signing Link",
      "description": "A link to the document that needs a signature is generated"
    },
    {
      "name": "Invites workflows > Bulk Invite"
    },
    {
      "name": "Invites workflows > Document Group Invite"
    },
    {
      "name": "Invites workflows > Embedded Signing"
    },
    {
      "name": "Invites workflows > Embedded Signing > 2FA"
    },
    {
      "name": "Invites workflows > Embedded Signing > 2FA > password"
    },
    {
      "name": "Invites workflows > Embedded Signing > 2FA > phone call"
    },
    {
      "name": "Invites workflows > Embedded Signing > 2FA > sms"
    },
    {
      "name": "Invites workflows > Embedded Signing > Embedded signing attributes"
    },
    {
      "name": "Invites workflows > Embedded Signing > Embedded signing attributes > force_new_signature = 1"
    },
    {
      "name": "Invites workflows > Embedded Signing > Embedded signing attributes > force_new_signature = 0"
    },
    {
      "name": "Invites workflows > Embedded Signing > Embedded signing attributes > required_preset_signature_name"
    },
    {
      "name": "Invites workflows > Embedded Signing of Doc Group"
    },
    {
      "name": "Invites workflows > Embedded sending"
    },
    {
      "name": "Invites workflows > Embedded sending DG"
    },
    {
      "name": "Invites workflows > Embedded editor"
    },
    {
      "name": "Invites workflows > Embedded editor DG"
    },
    {
      "name": "User"
    },
    {
      "name": "Oauth2"
    },
    {
      "name": "Oauth2 > Generate access token with authorization code"
    },
    {
      "name": "Invite to sign (Field Invite)"
    },
    {
      "name": "FreeForm invite"
    },
    {
      "name": "Document group field invite"
    },
    {
      "name": "Document group FreeForm invite"
    },
    {
      "name": "Document"
    },
    {
      "name": "Template"
    },
    {
      "name": "Document group"
    },
    {
      "name": "Document group template"
    },
    {
      "name": "Signing link"
    },
    {
      "name": "Webhooks 2.0"
    },
    {
      "name": "Folder"
    },
    {
      "name": "Smart fields"
    },
    {
      "name": "Embedded signing"
    },
    {
      "name": "Embedded sending"
    },
    {
      "name": "Embedded editor"
    },
    {
      "name": "Team"
    },
    {
      "name": "Organization"
    },
    {
      "name": "Dashboard"
    },
    {
      "name": "Request payments"
    },
    {
      "name": "Branding"
    },
    {
      "name": "Branding > Branding"
    },
    {
      "name": "Branding > Branding > Assign brand resource"
    },
    {
      "name": "Branding > Branding > Manage brands"
    },
    {
      "name": "Branding > Branding > General brand resource"
    },
    {
      "name": "Branding > Branding > Editor brand resource"
    },
    {
      "name": "Branding > Branding > Logo brand resource"
    },
    {
      "name": "Branding > Email branding"
    },
    {
      "name": "Branding > Email branding > Email general brand resource"
    },
    {
      "name": "Branding > Email branding > Email invite brand resource"
    },
    {
      "name": "Branding > Email branding > Email reassign brand resource"
    },
    {
      "name": "Branding > Email branding > Email canceled brand resource"
    },
    {
      "name": "Branding > Email branding > Email completed brand resource"
    },
    {
      "name": "Branding > Email branding > Email reminder brand resource"
    },
    {
      "name": "Branding > Email branding > Email-logo brand resource"
    },
    {
      "name": "Organization branding"
    },
    {
      "name": "Organization branding > Manage organization brands"
    },
    {
      "name": "Organization branding > Organization general brand resource"
    },
    {
      "name": "Organization branding > Organization editor brand resource"
    },
    {
      "name": "Organization branding > Organization logo brand resource"
    },
    {
      "name": "Organization branding > Organization email brand resource"
    },
    {
      "name": "Favorites"
    },
    {
      "name": "CRM contacts"
    },
    {
      "name": "CRM users"
    },
    {
      "name": "CRM contact groups"
    }
  ],
  "paths": {
    "/oauth2/token": {
      "post": {
        "tags": [
          "Oauth2"
        ],
        "summary": "Generate access token",
        "description": "Returns an `access_token`, its' type, scope, expiration time, and `refresh_token` for a user\n\nBy deafult token expires in 30 days\n\nCheck out other supported grant types [here](https://docs.signnow.com/authentication).",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "{{user}}"
                  },
                  "password": {
                    "type": "string",
                    "example": "{{password}}"
                  },
                  "grant_type": {
                    "type": "string",
                    "example": "password"
                  },
                  "scope": {
                    "type": "string",
                    "example": "*"
                  },
                  "refresh_token": {
                    "type": "string",
                    "example": "{{refresh_token}}"
                  },
                  "code": {
                    "type": "string",
                    "example": "{{authorization_code}}"
                  },
                  "expiration_time": {
                    "type": "integer",
                    "example": "60"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Basic {{basic_authorization_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/x-www-form-urlencoded"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Oauth2"
        ],
        "summary": "Verify access token",
        "description": "Verify an access token for a user",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/x-www-form-urlencoded"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Upload document",
        "description": "Uploads a file to user’s account and returns unique id of the uploaded document.   \n\nAccepts .doc, .docx, .pdf, .xls, .xlsx, .ppt, .pptx and .png file types.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id}": {
      "put": {
        "tags": [
          "Request payments"
        ],
        "summary": "Add payment request field",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "fields": [
                    {
                      "x": 358,
                      "y": 171,
                      "width": 177,
                      "height": 50,
                      "type": "text",
                      "page_number": 0,
                      "required": true,
                      "role": "Signer 1",
                      "custom_defined_option": false,
                      "name": "signature1",
                      "validator_id": "{{number_validator_id}}"
                    }
                  ],
                  "elements": [],
                  "client_timestamp": "{{$timestamp}}"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get document",
        "description": "This endpoint returns details of specific document",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Document"
        ],
        "summary": "Delete document",
        "description": "Deletes a document from user’s account",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id}/invite": {
      "post": {
        "tags": [
          "Request payments"
        ],
        "summary": "Send an invite to sign (payment request fixed)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "document_id": "{{document_id}}",
                  "to": [
                    {
                      "email": "{{signer_email}}",
                      "role_id": "{{role_id}}",
                      "role": "Signer 1",
                      "order": 1,
                      "payment_request": {
                        "merchant_id": "{{merchant_id}}",
                        "currency": "USD",
                        "type": "fixed",
                        "amount": "34.00"
                      }
                    }
                  ],
                  "from": "{{user}}"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/fieldinvite/{field_id_1}/resend": {
      "put": {
        "tags": [
          "Invites workflows > Invite to Sign (with fields)"
        ],
        "summary": "7. Resend field invite",
        "description": "Resend a pending signature invite with fillable fields to the assigned signer",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "field_id_1",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id}/invite/reassign/{field_invite_id_1}": {
      "put": {
        "tags": [
          "Invites workflows > Invite to Sign (with fields)"
        ],
        "summary": "8. Reassign signer",
        "description": "Change the assigned signer for a pending signature invite. Requires a `document_id`, `field_invite_id`, and the new signer's email.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"role_id\\\": \\\"{{role_id_1}}\\\",\\n    \\\"email\\\": \\\"{{signer_email_3}}\\\",\\n    \\\"cc\\\": [],\\n    \\\"reassign\\\": 1\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "field_invite_id_1",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id}/invite/changepassword": {
      "put": {
        "tags": [
          "Invites workflows > Invite to Sign (with fields)"
        ],
        "summary": "9. Change password",
        "description": "Update the password required for a signer to access and sign a document. Requires a `document_id`, `fieldinvite_id`, and the new password.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"fieldinvite_id\\\": \\\"{{field_invite_id_2}}\\\",\\n    \\\"authentication_type\\\": \\\"password\\\",\\n    \\\"new_password\\\": \\\"29\\\"\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/field_invite/{field_invite_id_2}": {
      "delete": {
        "tags": [
          "Invites workflows > Invite to Sign (with fields)"
        ],
        "summary": "10. Cancel field invite",
        "description": "Revoke a pending signature invite with fillable fields, preventing the signer from accessing the document. Requires a `field_invite_id`.",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "field_invite_id_2",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/template": {
      "post": {
        "tags": [
          "Template"
        ],
        "summary": "Create template",
        "description": "Creates a template by flattening an existing document.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "document_id": "{{document_id}}",
                  "document_name": "Sample template"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/documents": {
      "delete": {
        "tags": [
          "Invites workflows > Bulk Invite"
        ],
        "summary": "8. Delete Documents",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{template_id}": {
      "put": {
        "tags": [
          "Invites workflows > Bulk Invite"
        ],
        "summary": "6. Add 3 signature fields",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"fields\\\": [\\n        {\\n            \\\"x\\\": 358,\\n            \\\"y\\\": 171,\\n            \\\"width\\\": 177,\\n            \\\"height\\\": 50,\\n            \\\"type\\\": \\\"signature\\\",\\n            \\\"page_number\\\": 0,\\n            \\\"required\\\": true,\\n            \\\"role\\\": \\\"Signer 1\\\",\\n            \\\"custom_defined_option\\\": false,\\n            \\\"name\\\": \\\"Signer 1\\\"\\n        },\\n        {\\n            \\\"x\\\": 358,\\n            \\\"y\\\": 287,\\n            \\\"width\\\": 177,\\n            \\\"height\\\": 50,\\n            \\\"type\\\": \\\"signature\\\",\\n            \\\"page_number\\\": 0,\\n            \\\"required\\\": true,\\n            \\\"role\\\": \\\"Signer 2\\\",\\n            \\\"custom_defined_option\\\": false,\\n            \\\"name\\\": \\\"signature2\\\"\\n        },\\n        {\\n            \\\"x\\\": 358,\\n            \\\"y\\\": 250,\\n            \\\"width\\\": 177,\\n            \\\"height\\\": 50,\\n            \\\"type\\\": \\\"signature\\\",\\n            \\\"page_number\\\": 0,\\n            \\\"required\\\": true,\\n            \\\"role\\\": \\\"Signer 3\\\",\\n            \\\"custom_defined_option\\\": false,\\n            \\\"name\\\": \\\"signature3\\\"\\n        }\\n    ],\\n    \\\"elements\\\": [],\\n    \\\"client_timestamp\\\": {{$timestamp}}\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Invites workflows > Signing Link"
        ],
        "summary": "6. Get role id's for template",
        "description": "Retrieves role IDs from the template and extracts a specific role's unique ID for use in signing workflows",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{template_id}/template/routing/detail": {
      "put": {
        "tags": [
          "Invites workflows > Signing Link"
        ],
        "summary": "7. Update routing details",
        "description": "Updates the routing details of a template by modifying role settings and signing order",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"template_data\\\": [\\n        {\\n            \\\"default_email\\\": \\\"\\\",\\n            \\\"inviter_role\\\": false,\\n            \\\"name\\\": \\\"Signer 1\\\",\\n            \\\"role_id\\\": \\\"{{role_id_1}}\\\",\\n            \\\"signing_order\\\": 1\\n        }\\n    ],\\n    \\\"cc\\\": [],\\n    \\\"cc_step\\\": []\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/template/{template_id}/copy": {
      "post": {
        "tags": [
          "Template"
        ],
        "summary": "Get document out of template",
        "description": "Creates a new document copy out of template. If a name is not supplied than it will default to the original template name.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "document_name": "New document"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user info",
        "description": "Returns a user resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Change user details",
        "description": "Updates user informaition i.e. first name, last name",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "first_name": "first_name",
                  "last_name": "last_name",
                  "old_password": "verystrongpassword",
                  "password": "evenstongerone",
                  "logout_all": "true"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create user",
        "description": "Creates an account for a user   \n   \n   This endpoint consumes Basic authorization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "{{new_user_email}}",
                  "password": "newpassword",
                  "first_name": "firstName",
                  "last_name": "lastName",
                  "number": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Basic {{basic_authorization_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/link": {
      "post": {
        "tags": [
          "Smart fields"
        ],
        "summary": "Add values of Smart fields to Redirect URI",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "document_id": "12XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                  "redirect_uri": "https://example.com?firstname=[smart_fields.firstname]&lastname=[smart_fields.lastname]"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/application/signing-links": {
      "get": {
        "tags": [
          "Signing link"
        ],
        "summary": "Get signing links",
        "description": "Creates a Signing Link for a specific document.",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Basic {{basic_authorization_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/application/signing-links/{signing_link_short_url_id}": {
      "put": {
        "tags": [
          "Signing link"
        ],
        "summary": "Activate/deactivate signing link",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "active": true
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Basic {{basic_authorization_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "signing_link_short_url_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/template/{template_id}/bulkinvite": {
      "post": {
        "tags": [
          "Template"
        ],
        "summary": "Bulk invite",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "folder_id": {
                    "type": "string",
                    "example": "{{folder_id}}"
                  },
                  "client_timestamp": {
                    "type": "string",
                    "example": "{{$timestamp}}"
                  },
                  "document_name": {
                    "type": "string",
                    "example": "document name"
                  },
                  "subject": {
                    "type": "string",
                    "example": "Bulk Invite subject"
                  },
                  "email_message": {
                    "type": "string",
                    "example": "Bulk invite message"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/x-www-form-urlencoded"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id_1}": {
      "put": {
        "tags": [
          "Invites workflows > Embedded Signing of Doc Group"
        ],
        "summary": "5. Add field to doc 1",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"fields\\\": [\\n        {\\n            \\\"x\\\": 358,\\n            \\\"y\\\": 171,\\n            \\\"width\\\": 177,\\n            \\\"height\\\": 50,\\n            \\\"type\\\": \\\"text\\\",\\n            \\\"page_number\\\": 0,\\n            \\\"required\\\": true,\\n            \\\"role\\\": \\\"Signer 1\\\",\\n            \\\"custom_defined_option\\\": false,\\n            \\\"name\\\": \\\"signature1\\\"\\n        }\\n    ],\\n    \\\"elements\\\": [],\\n    \\\"client_timestamp\\\": {{$timestamp}}\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id_1",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Invites workflows > Embedded Signing of Doc Group"
        ],
        "summary": "10. Get field id 1 signer",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id_1",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id_2}": {
      "put": {
        "tags": [
          "Invites workflows > Embedded Signing of Doc Group"
        ],
        "summary": "6. Add field to doc 2",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"fields\\\": [\\n        {\\n            \\\"x\\\": 358,\\n            \\\"y\\\": 171,\\n            \\\"width\\\": 177,\\n            \\\"height\\\": 50,\\n            \\\"type\\\": \\\"text\\\",\\n            \\\"page_number\\\": 0,\\n            \\\"required\\\": true,\\n            \\\"role\\\": \\\"Signer 1\\\",\\n            \\\"custom_defined_option\\\": false,\\n            \\\"name\\\": \\\"signature1\\\"\\n        }\\n    ],\\n    \\\"elements\\\": [],\\n    \\\"client_timestamp\\\": {{$timestamp}}\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id_2",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Invites workflows > Embedded Signing of Doc Group"
        ],
        "summary": "11. Get field id 2 signer",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id_2",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id_3}": {
      "put": {
        "tags": [
          "Invites workflows > Embedded Signing of Doc Group"
        ],
        "summary": "7. Add field to doc 3",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"fields\\\": [\\n        {\\n            \\\"x\\\": 358,\\n            \\\"y\\\": 171,\\n            \\\"width\\\": 177,\\n            \\\"height\\\": 50,\\n            \\\"type\\\": \\\"text\\\",\\n            \\\"page_number\\\": 0,\\n            \\\"required\\\": true,\\n            \\\"role\\\": \\\"Signer 1\\\",\\n            \\\"custom_defined_option\\\": false,\\n            \\\"name\\\": \\\"signature1\\\"\\n        }\\n    ],\\n    \\\"elements\\\": [],\\n    \\\"client_timestamp\\\": {{$timestamp}}\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id_3",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Invites workflows > Embedded Signing of Doc Group"
        ],
        "summary": "12. Get field id 3 signer",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id_3",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/documentgroup": {
      "post": {
        "tags": [
          "Document group"
        ],
        "summary": "Create document group",
        "description": "Creates a document group from a list of document ids\n\nAll documents:\n\nMust be owned by the person creating the document group.\nCannot be templates.\nCannot already be a part of another document group (delete document group first to add them).\nAt least one of the documents must have fields.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "document_ids": [
                    "{{document_id}}",
                    "{{document_id_1}}"
                  ],
                  "group_name": "Document Group test"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/documentgroup/{document_group_id}/groupinvite": {
      "post": {
        "tags": [
          "Document group field invite"
        ],
        "summary": "Invite to sign document group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "invite_steps": [
                    {
                      "order": 1,
                      "invite_emails": [
                        {
                          "email": "{{signer_email_1}}",
                          "subject": "Subject",
                          "expiration_days": 30
                        }
                      ],
                      "invite_actions": [
                        {
                          "email": "{{signer_email_1}}",
                          "role_name": "Signer 1",
                          "action": "sign",
                          "document_id": "{{document_id}}",
                          "allow_reassign": "0",
                          "decline_by_signature": "0",
                          "redirect_uri": "https://example.com",
                          "decline_redirect_uri": "https://signnow.com",
                          "close_redirect_uri": "https://close-redirect-uri.com",
                          "redirect_target": "blank"
                        }
                      ]
                    },
                    {
                      "order": 2,
                      "invite_emails": [
                        {
                          "email": "{{signer_email_2}}",
                          "subject": "Subject",
                          "message": "custom message",
                          "expiration_days": 30
                        },
                        {
                          "email": "{{signer_email_3}}",
                          "subject": "Subject",
                          "message": "custom message",
                          "expiration_days": 30
                        }
                      ],
                      "invite_actions": [
                        {
                          "email": "{{signer_email_2}}",
                          "role_name": "Signer 2",
                          "action": "sign",
                          "document_id": "{{document_id}}",
                          "allow_reassign": "0",
                          "decline_by_signature": "0"
                        },
                        {
                          "email": "{{signer_email_3}}",
                          "role_name": "Signer 3",
                          "action": "sign",
                          "document_id": "{{document_id}}",
                          "allow_reassign": "0",
                          "decline_by_signature": "0"
                        }
                      ]
                    }
                  ],
                  "completion_emails": [],
                  "sign_as_merged": true,
                  "cc": [
                    "cc_recipient1@emaildomain.com",
                    "cc_recipient2@emaildomain.com"
                  ],
                  "cc_subject": "Subject",
                  "cc_message": "Message"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/documentgroup/{document_group_id}/groupinvite/{document_group_invite_id}/resendinvites": {
      "post": {
        "tags": [
          "Document group field invite"
        ],
        "summary": "Resend document group invite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "{{signer_email_1}}"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_group_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/documentgroup/{document_group_id}/groupinvite/{document_group_invite_id}": {
      "get": {
        "tags": [
          "Document group field invite"
        ],
        "summary": "Get document group invite",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_group_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/documentgroup/{document_group_id}/groupinvite/{document_group_invite_id}/cancelinvite": {
      "post": {
        "tags": [
          "Document group field invite"
        ],
        "summary": "Cancel document group invite",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_group_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/documents/{document_id}/embedded-invites": {
      "post": {
        "tags": [
          "Embedded signing"
        ],
        "summary": "Create embedded signing invite",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"name_formula\\\": \\\"any_text_prefix|document_field1|document_field2\\\",\\n    \\\"invites\\\": [\\n        {\\n            \\\"email\\\": \\\"{{signer_email}}\\\",\\n            \\\"role_id\\\": \\\"{{role_id}}\\\",\\n            \\\"order\\\": 1,\\n            \\\"auth_method\\\": \\\"email\\\",\\n            \\\"first_name\\\": \\\"first_name_1\\\",\\n            \\\"last_name\\\": \\\"last_name_1\\\",\\n            \\\"redirect_uri\\\": \\\"https://example.com\\\",\\n            \\\"decline_redirect_uri\\\": \\\"https://signnow.com\\\",\\n            \\\"close_redirect_uri\\\": \\\"https://close-redirect-uri.com\\\",\\n            \\\"redirect_target\\\": \\\"blank\\\"\\n        }\\n    ]\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Embedded signing"
        ],
        "summary": "Delete embedded invites",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/documents/{document_id}/embedded-invites/{embedded_invite_id}/link": {
      "post": {
        "tags": [
          "Invites workflows > Embedded Signing"
        ],
        "summary": "6. Generate signing link",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "auth_method": "email"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "embedded_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/embedded-invites": {
      "post": {
        "tags": [
          "Embedded signing"
        ],
        "summary": "Create embedded invite for doc group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "invites": [
                    {
                      "order": 1,
                      "signers": [
                        {
                          "email": "{{signer_email}}",
                          "auth_method": "none",
                          "first_name": "John",
                          "last_name": "Doe",
                          "redirect_uri": "https://example.com",
                          "decline_redirect_uri": "https://signnow.com",
                          "close_redirect_uri": "https://close-redirect-uri.com",
                          "redirect_target": "blank",
                          "documents": [
                            {
                              "id": "{{document_id}}",
                              "role": "Signer 1",
                              "action": "sign"
                            },
                            {
                              "id": "{{document_id_1}}",
                              "action": "view"
                            }
                          ]
                        },
                        {
                          "email": "{{signer_email_1}}",
                          "auth_method": "none",
                          "first_name": "Jane",
                          "last_name": "Doe",
                          "documents": [
                            {
                              "id": "{{document_id}}",
                              "role": "Signer 2",
                              "action": "sign"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "order": 2,
                      "signers": [
                        {
                          "email": "{{signer_email}}",
                          "auth_method": "none",
                          "documents": [
                            {
                              "id": "{{document_id_1}}",
                              "role": "Signer 1",
                              "action": "sign"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "sign_as_merged": true
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Embedded signing"
        ],
        "summary": "Delete embedded doc group invites",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/documentgroup/{document_group_id}/groupinvite/{embedded_document_group_invite_id}": {
      "get": {
        "tags": [
          "Invites workflows > Embedded Signing of Doc Group"
        ],
        "summary": "13. Get group invite step id's",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "embedded_document_group_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/embedded-invites/{embedded_document_group_invite_id}/link": {
      "post": {
        "tags": [
          "Invites workflows > Embedded Signing of Doc Group"
        ],
        "summary": "14. Generate signing link",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "{{signer_email}}",
                  "auth_method": "none"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "embedded_document_group_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/documents/{document_id}/embedded-sending": {
      "post": {
        "tags": [
          "Embedded sending"
        ],
        "summary": "Create embedded sending link",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"type\\\": \\\"document\\\",\\n    \\\"redirect_uri\\\": \\\"https://example.com\\\",\\n    \\\"link_expiration\\\": 15,\\n    \\\"redirect_target\\\": \\\"blank\\\"\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/embedded-sending": {
      "post": {
        "tags": [
          "Embedded sending"
        ],
        "summary": "Create embedded sending link for doc group",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"redirect_uri\\\": \\\"https://example.com\\\",\\n    \\\"link_expiration\\\": 15,\\n    \\\"redirect_target\\\": \\\"blank\\\"\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/documents/{document_id}/embedded-editor": {
      "post": {
        "tags": [
          "Embedded editor"
        ],
        "summary": "Create embedded editor link for doc",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"redirect_uri\\\": \\\"https://example.com\\\",\\n    \\\"link_expiration\\\": 15,\\n    \\\"redirect_target\\\": \\\"blank\\\"\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/embedded-editor": {
      "post": {
        "tags": [
          "Embedded editor"
        ],
        "summary": "Create embedded editor link for doc group",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"redirect_uri\\\": \\\"https://example.com\\\",\\n    \\\"link_expiration\\\": 15,\\n    \\\"redirect_target\\\": \\\"blank\\\"\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/user/email/verify": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Verify email",
        "description": "Verifies user’s email address using token from verification email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "{{new_user_email}}",
                  "verification_token": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Basic {{basic_authorization_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/user/forgotpassword": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Reset password",
        "description": "Sends password reset link via email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "{{new_user_email}}"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Basic {{basic_authorization_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/user/documentsv2": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get modified documents",
        "description": "Returns an array of user’s documents that were modified (added fields, texts, signatures, etc.)",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/user/documents": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user documents",
        "description": "Returns information of user’s documents that were not modified yet.",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/applications": {
      "get": {
        "tags": [
          "Oauth2 > Generate access token with authorization code"
        ],
        "summary": "2. Get client_id",
        "description": "Returns an `access_token`, its' type, scope, expiration time, and `refresh_token` for a user\n\nBy deafult token expires in 30 days\n\nCheck out other supported grant types [here](https://docs.signnow.com/authentication).",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/oauth2/userauth": {
      "get": {
        "tags": [
          "Oauth2 > Generate access token with authorization code"
        ],
        "summary": "3. Get code via redirect",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "response_type",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "code"
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{redirect_uri}}"
          },
          {
            "name": "client_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{client_id}}"
          },
          {
            "name": "access_token",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/fieldinvite/{field_request_id}/resend": {
      "put": {
        "tags": [
          "Invite to sign (Field Invite)"
        ],
        "summary": "Resend email invite",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "field_request_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/field_invite/{field_invite_id}": {
      "delete": {
        "tags": [
          "Invite to sign (Field Invite)"
        ],
        "summary": "Replace a signer: Step 1 - Delete",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "field_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/field_invite": {
      "post": {
        "tags": [
          "Invite to sign (Field Invite)"
        ],
        "summary": "Replace a signer: Step 2 - Replace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "new_signer@emaildomain.com",
                  "role_id": "{{role_id}}",
                  "is_replace": true,
                  "expiration_days": 30,
                  "decline_by_signature": 0,
                  "reminder": 0,
                  "authentication_type": "password",
                  "password": "123456"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id}/trigger_fieldinvite": {
      "post": {
        "tags": [
          "Invite to sign (Field Invite)"
        ],
        "summary": "Replace a signer: Step 3 - Send",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id}/fieldinvitecancel": {
      "put": {
        "tags": [
          "Invite to sign (Field Invite)"
        ],
        "summary": "Cancel invite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "reason": "Cancellation reason"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/signing-session-settings": {
      "post": {
        "tags": [
          "Invite to sign (Field Invite)"
        ],
        "summary": "Customize welcome message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "welcome_message": "Hi, please, sign this document."
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Invite to sign (Field Invite)"
        ],
        "summary": "Get welcome message",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Invite to sign (Field Invite)"
        ],
        "summary": "Reset welcome message to default",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/documents/{document_id}/field-invites/{field_invite_id}/full-decline": {
      "post": {
        "tags": [
          "Invite to sign (Field Invite)"
        ],
        "summary": "Decline to sign a field invite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": "{\n    \"reason\": \"decline reason\",\n    \"client_timestamp\": {{$timestamp}}\n}"
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "field_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Invite to sign (Field Invite)"
        ],
        "summary": "Get the declined invite",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "field_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/documents/{document_id}/free-form-invites": {
      "get": {
        "tags": [
          "FreeForm invite"
        ],
        "summary": "Get document FreeForm invites",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/invite/{free_form_invite_id}/cancel": {
      "put": {
        "tags": [
          "FreeForm invite"
        ],
        "summary": "Cancel FreeForm invite",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"reason\\\": \\\"string\\\"\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "free_form_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/documentgroup/{document_group_id}/groupinvite/{document_group_invite_id}/invitestep/{document_group_invite_step_id}/emails": {
      "get": {
        "tags": [
          "Document group field invite"
        ],
        "summary": "Get emails of the invite step",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_group_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_group_invite_step_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/documentgroup/{document_group_id}/groupinvite/{invte_id}/pendinginvites": {
      "get": {
        "tags": [
          "Document group field invite"
        ],
        "summary": "Get pending group invites",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "invte_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/documentgroup/{document_group_id}/groupinvite/{document_group_invite_id}/invitestep/{document_group_invite_step_id}/update": {
      "post": {
        "tags": [
          "Document group field invite"
        ],
        "summary": "Update document group invite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "user_to_update": "initial.signer@emaildomain.com",
                  "invite_email": {
                    "email": "updated.signer@emaildomain.com",
                    "reminder": 0,
                    "expiration_days": 30
                  },
                  "update_invite_action_attributes": [
                    {
                      "document_id": "{{document_id}}",
                      "allow_reassign": 0,
                      "decline_by_signature": "0"
                    }
                  ],
                  "replace_with_this_user": "updated.signer@emaildomain.com"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_group_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_group_invite_step_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/recipients": {
      "get": {
        "tags": [
          "Document group field invite"
        ],
        "summary": "Get document group recipients",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "Document group field invite"
        ],
        "summary": "Edit document group recipients",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "recipients": [
                    {
                      "name": "test",
                      "email": "{{signer_email_1}}",
                      "order": 1,
                      "attributes": {
                        "message": "test message",
                        "subject": "test subject",
                        "expiration_days": 10,
                        "allow_forwarding": true,
                        "show_decline_button": true,
                        "i_am_recipient": true,
                        "authentication": {
                          "type": "type",
                          "value": "value for the paas protection",
                          "phone": "phone number",
                          "method": "method name"
                        },
                        "reminder": {
                          "remind_after": 10,
                          "remind_before": 10,
                          "remind_repeat": 10
                        }
                      },
                      "documents": [
                        {
                          "id": "{{document_id}}",
                          "role": "Signer 1",
                          "action": "sign"
                        }
                      ]
                    },
                    {
                      "name": "test 2",
                      "email_group": {
                        "id": "{{email_group_unique_id}}"
                      },
                      "order": 1,
                      "documents": [
                        {
                          "id": "{{document_id}}",
                          "role": "Signer 2",
                          "action": "sign"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/invites/{document_group_invite_id}/full-decline": {
      "post": {
        "tags": [
          "Document group field invite"
        ],
        "summary": "Decline to sign a group invite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": "{\n    \"decline\": \"decline reason\",\n    \"client_timestamp\": {{$timestamp}}\n}"
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_group_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/send-email": {
      "post": {
        "tags": [
          "Document group field invite"
        ],
        "summary": "Email document group copy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": "{\n    \"to\": [\n        {\n            \"email\": \"{{signer_email_1}}\"\n        }\n    ],\n    \"with_history\": true,\n    \"client_timestamp\": {{$timestamp}}\n}"
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/free-form-invites": {
      "post": {
        "tags": [
          "Document group FreeForm invite"
        ],
        "summary": "Create doc group FreeForm invite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": "{\n    \"to\": [\n        {\n            \"email\": \"{{signer_email}}\",\n            \"close_redirect_uri\": \"https://close-redirect-uri.com\",\n            \"redirect_uri\": \"https://redirect-uri.com\",\n            \"redirect_target\": \"blank\"\n        }\n    ],\n    \"cc\": [\n        {\n            \"email\": \"cc@emaildomain.com\"\n        }\n    ],\n    \"message\": \"You have been invited to sign a document group\",\n    \"subject\": \"You have been invited to sign a document group\",\n    \"redirect_uri\": \"https://exampl.com\",\n    \"client_timestamp\": {{$timestamp}}\n}"
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/free-form-invites/{document_group_freeform_invite_id}/documents": {
      "get": {
        "tags": [
          "Document group FreeForm invite"
        ],
        "summary": "Get doc group FreeForm invites",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_group_freeform_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/free-form-invites/{document_group_freeform_invite_id}/users/{user_id}/cancel": {
      "post": {
        "tags": [
          "Document group FreeForm invite"
        ],
        "summary": "Cancel doc group FreeForm invite for the specific signer by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": "{\n    \"reason\": \"cancel reason\",\n    \"client_timestamp\": {{$timestamp}}\n}"
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_group_freeform_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/free-form-invites/{document_group_freeform_invite_id}/cancel": {
      "post": {
        "tags": [
          "Document group FreeForm invite"
        ],
        "summary": "Cancel doc group FreeForm invite for all signers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": "{\n    \"reason\": \"cancel reason\",\n    \"client_timestamp\": {{$timestamp}}\n}"
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_group_freeform_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/free-form-invites/{document_group_freeform_invite_id}/users/{user_id}/resend": {
      "post": {
        "tags": [
          "Document group FreeForm invite"
        ],
        "summary": "Resend doc group FreeForm invite",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_group_freeform_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/documents/{document_id}/prefill-texts": {
      "put": {
        "tags": [
          "Document"
        ],
        "summary": "Prefill text fields",
        "description": "Updates a document by adding/overwriting fields or elements (texts, checks, signatures, hyperlinks, attachments)\n   \n   More details can be found [here](https://docs.signnow.com/reference/oas/document/putdocumentdocumentid)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "fields": [
                    {
                      "field_name": "first_name",
                      "prefilled_text": "Jane"
                    },
                    {
                      "field_name": "last_name",
                      "prefilled_text": "Doe"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/fieldextract": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Upload document with tags",
        "description": "Uploads a file that contains [SignNow Text Tags](https://docs.signnow.com/docs/text-tags) . Only .doc, .docx, and .pdf are supported",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Tags": {
                    "type": "string",
                    "example": "[\n   {\n      \"tag_name\":\"tag 1\",\n      \"role\":\"Signer 1\",\n      \"label\":\"name\",\n      \"required\":true,\n      \"type\":\"text\",\n      \"height\":15,\n      \"width\":100\n   }\n]"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/documents/url": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Upload document from URL",
        "description": "Uploads a file that contains [SignNow Text Tags](https://docs.signnow.com/docs/text-tags) . Only .doc, .docx, and .pdf are supported",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"url\\\": \\\"string\\\",\\n    \\\"check_fields\\\": true\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id}/move": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Move document",
        "description": "Moves a document into specified folder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "folder_id": "{{folder_id}}"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/folder/{folder_id}/documents": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Move documents in bulk",
        "description": "Moves a document into specified folder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": [
                  {
                    "unique_id": "{{document_id_1}}"
                  },
                  {
                    "unique_id": "{{document_id_2}}"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "folder_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/merge": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Merge documents",
        "description": "Merges existing documents into one.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "the merged doc",
                  "document_ids": [
                    "{{document_id_1}}",
                    "{{document_id_2}}"
                  ],
                  "upload_document": false
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/documents/{document_id}/fields": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get fields data from completed document",
        "description": "Merges existing documents into one.",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id}/historyfull": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get document history",
        "description": "Returns the history of a document.",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id}/download/link": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Get document download link",
        "description": "Returns a one-time use URL for anyone to download the document as a PDF.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": ""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id}/download": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Download document",
        "description": "Downloads a document",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/pdf"
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "collapsed"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id}/attachment/{attachment_id}/download": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Download document attachment",
        "description": "Downloads a document",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/pdf"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "attachment_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id}/metadata": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get metadata of a document",
        "description": "Downloads a document",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "Document"
        ],
        "summary": "Add metadata to the document",
        "description": "Downloads a document",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "key": "value",
                  "key1": "value",
                  "key2": "value",
                  "source": "webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id}/custom_history_event": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Add custom event",
        "description": "Allows developers to add their custom events to the audit log. \n\nFor example, if you are using a single SignNow account to make API calls but authenticating multiple people, use this call to add a record to the audit log for that specific document that references the authentication method.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": "{\n    \"client_timestamp\": {{$timestamp}},\n    \"event_type\": \"test_event\"\n}"
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/import/document-templates": {
      "post": {
        "tags": [
          "Template"
        ],
        "summary": "Import template  from DocuSign",
        "description": "Creates a new document copy out of template. If a name is not supplied than it will default to the original template name.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/templates/{template_id}/copies": {
      "get": {
        "tags": [
          "Template"
        ],
        "summary": "Get list of documents from template",
        "description": "Creates a new document copy out of template. If a name is not supplied than it will default to the original template name.",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/templates/{template_id}/copy": {
      "post": {
        "tags": [
          "Template"
        ],
        "summary": "Duplicate a template",
        "description": "Creates a new document copy out of template. If a name is not supplied than it will default to the original template name.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "template_name": "new template",
                  "folder_id": "{{template_folder_id}}",
                  "clear_recipient_details": false
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}": {
      "put": {
        "tags": [
          "Document group"
        ],
        "summary": "Rename document group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "group_name": "Group name new test name"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Document group"
        ],
        "summary": "Get document group info (v.2)",
        "description": "Returns document and roles information for documents in a document group. The invite_id property is null if there is no group invite for the group yet.",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/documentgroup/{document_group_id}": {
      "get": {
        "tags": [
          "Document group"
        ],
        "summary": "Get document group",
        "description": "Returns document and roles information for documents in a document group. The invite_id property is null if there is no group invite for the group yet.",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Document group"
        ],
        "summary": "Delete document group",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/user/documentgroups": {
      "get": {
        "tags": [
          "Document group"
        ],
        "summary": "Get document groups",
        "description": "Returns back all document groups the user owns.\n\nThe call is paginated by last_updated, so offset and limit query parameters are required:\n\n1. Limit must be greater than 0 but less than or equal to 50.\n2. Offset must be 0 or greater.",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "20"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/documentgroup/{document_group_id}/historyfull": {
      "get": {
        "tags": [
          "Document group"
        ],
        "summary": "Get document group history",
        "description": "Returns back all document groups the user owns.\n\nThe call is paginated by last_updated, so offset and limit query parameters are required:\n\n1. Limit must be greater than 0 but less than or equal to 50.\n2. Offset must be 0 or greater.",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/documentgroup/{document_group_id}/downloadall": {
      "post": {
        "tags": [
          "Document group"
        ],
        "summary": "Download document group",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"type\\\": \\\"merged\\\",\\n    \\\"with_history\\\": \\\"after_merged_pdf\\\",\\n    \\\"document_order\\\": [\\n        \\\"{{document_id}}\\\",\\n        \\\"{{document_id_1}}\\\"\\n    ]\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/metadata": {
      "put": {
        "tags": [
          "Document group"
        ],
        "summary": "Add metadata to the document group",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"content\\\": {\\n        \\\"key\\\": \\\"value\\\",\\n        \\\"key1\\\": \\\"value\\\",\\n        \\\"key2\\\": \\\"value\\\"\\n    }\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Document group"
        ],
        "summary": "Get metadata to the document group",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": ", application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Document group"
        ],
        "summary": "Remove metadata from document group",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/invite/{document_group_invite_id}/correction": {
      "post": {
        "tags": [
          "Document group"
        ],
        "summary": "Correct the document group",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"client_timestamp\\\": {{$timestamp}}\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_group_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/copy": {
      "post": {
        "tags": [
          "Document group"
        ],
        "summary": "Create a copy of Document Group",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"document_group_name\\\": \\\"Copy of Document Group\\\",\\n    \\\"client_timestamp\\\": {{$timestamp}}\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/move": {
      "post": {
        "tags": [
          "Document group"
        ],
        "summary": "Move document group",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"folder_id\\\": \\\"{{folder_id}}\\\"\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json,"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/document-group-template": {
      "post": {
        "tags": [
          "Document group template"
        ],
        "summary": "Create doc group template from doc group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "Document Group Template name",
                  "folder_id": "{{template_folder_id}}"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-group-templates/{document_group_template_id}/document-group": {
      "post": {
        "tags": [
          "Document group template"
        ],
        "summary": "Create document group from template",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "group_name": "Sample group",
                  "client_timestamp": "{{$timestamp}}",
                  "folder_id": "{{folder_id}}"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/user/documentgroup/templates": {
      "get": {
        "tags": [
          "Document group template"
        ],
        "summary": "Get document group templates",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-group-templates/{document_group_template_id}/copy": {
      "post": {
        "tags": [
          "Document group template"
        ],
        "summary": "Copy document group template",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "Document Group Template copy",
                  "folder_id": "{{template_folder_id}}"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-group-templates/{document_group_template_id}/move": {
      "patch": {
        "tags": [
          "Document group template"
        ],
        "summary": "Move document group template",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "folder_id": "{{template_folder_id}}",
                  "with_templates": false
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-group-templates/{document_group_template_id}/copies": {
      "get": {
        "tags": [
          "Document group template"
        ],
        "summary": "Get doc groups created from template",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-group-templates/{document_group_template_id}/recipients": {
      "get": {
        "tags": [
          "Document group template"
        ],
        "summary": "Get doc group template recipients",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/signing-links": {
      "post": {
        "tags": [
          "Signing link"
        ],
        "summary": "Create/edit signing link for doc group",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/event-subscriptions": {
      "get": {
        "tags": [
          "Webhooks 2.0"
        ],
        "summary": "Get list of event subscriptions",
        "description": "Gets information about all subscriptions to events made with a specific application",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "Webhooks 2.0"
        ],
        "summary": "Create event subscription",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"event\\\": \\\"document.open\\\",\\n    \\\"entity_id\\\": \\\"{{document_id}}\\\",\\n    \\\"action\\\": \\\"callback\\\",\\n    \\\"attributes\\\": {\\n        \\\"callback\\\": \\\"{{callback_url}}\\\",\\n        \\\"use_tls_12\\\": true,\\n        \\\"integration_id\\\": \\\"{{integration_id}}\\\",\\n        \\\"docid_queryparam\\\": true,\\n        \\\"headers\\\": {\\n            \\\"string_head\\\": \\\"test\\\",\\n            \\\"int_head\\\": 12,\\n            \\\"bool_head\\\": false,\\n            \\\"float_head\\\": 12.24\\n        },\\n        \\\"include_metadata\\\": true,\\n        \\\"secret_key\\\": \\\"c8XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\\"\\n    }\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/event-subscriptions/{event_subscription_id}": {
      "get": {
        "tags": [
          "Webhooks 2.0"
        ],
        "summary": "Get subscription info",
        "description": "Gets information about all subscriptions to events made with a specific application",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "event_subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "Webhooks 2.0"
        ],
        "summary": "Edit event subscription",
        "description": "Gets information about all subscriptions to events made with a specific application",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "event": "document.fieldinvite.sent",
                  "entity_id": "{{document_id}}",
                  "action": "callback",
                  "attributes": {
                    "delete_access_token": true,
                    "callback": "{{callback_url}}",
                    "use_tls_12": true,
                    "integration_id": "{{integration_id}}",
                    "docid_queryparam": true,
                    "headers": {
                      "string_head": "test",
                      "int_head": 12,
                      "bool_head": false,
                      "float_head": 12.24
                    },
                    "include_metadata": true,
                    "secret_key": "c8XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "event_subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Webhooks 2.0"
        ],
        "summary": "Delete event subscription",
        "description": "Gets information about all subscriptions to events made with a specific application",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "event_subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/event-subscriptions/callbacks": {
      "get": {
        "tags": [
          "Webhooks 2.0"
        ],
        "summary": "Get list of callbacks",
        "description": "Gets information about all subscriptions to events made with a specific application",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/event-subscriptions/{event_subscription_id}/callbacks": {
      "get": {
        "tags": [
          "Webhooks 2.0"
        ],
        "summary": "Get list of callbacks by event subscription",
        "description": "Gets information about all subscriptions to events made with a specific application",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "event_subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/event-subscriptions/{event_subscription_id}/callbacks/{callback_id}": {
      "get": {
        "tags": [
          "Webhooks 2.0"
        ],
        "summary": "Get callback info by ID",
        "description": "Gets information about all subscriptions to events made with a specific application",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "event_subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "callback_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/event-subscriptions/{event_subscription_id}/deactivate": {
      "put": {
        "tags": [
          "Webhooks 2.0"
        ],
        "summary": "Deactivate event subscription",
        "description": "Gets information about all subscriptions to events made with a specific application",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "event_subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/event-subscriptions/{event_subscription_id}/activate": {
      "put": {
        "tags": [
          "Webhooks 2.0"
        ],
        "summary": "Activate event subscription",
        "description": "Gets information about all subscriptions to events made with a specific application",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "event_subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/event-subscriptions/{event_subscription_id}/callbacks/{callback_id}/resend": {
      "post": {
        "tags": [
          "Webhooks 2.0"
        ],
        "summary": "Resend webhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": ""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "event_subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "callback_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/user/folder": {
      "post": {
        "tags": [
          "Folder"
        ],
        "summary": "Create folder",
        "description": "Creates a folder for the user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "test folder",
                  "parent_id": "{{parent_folder_id}}"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Folder"
        ],
        "summary": "Get all folders",
        "description": "Returns all folders of a user.",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/folder/{folder_id}": {
      "get": {
        "tags": [
          "Folder"
        ],
        "summary": "Get folder by id",
        "description": "Returns all details of a specific folder including an array of all documents in that folder.\n\nYou can adjust the response produced by this endpoint using the following query parameters:\n\n**filters=signing-status&filter-values** - allows to show documents with specific status\n<br>allowed values: signed, pending, waiting-for-me, waiting-for-others\n\n**filters=documents-created&filter-values** - shows documents that were created started from specific date (note: this filter is not applicable for Templates)\n<br>allowed values: Unix timestamp\n\n**filters=documents-updated&filter-values** - shows documents that were updated started from specific date (note: this filter is not applicable for Templates)\n<br>allowed values: Unix timestamp\n\n**sortby=created&order** - sorts documents by creation date in descending or ascending order\n<br>allowed values: desc, asc\n\n**sortby=updated&order** - sorts documents by update date\n<br>allowed values: desc, asc\n\n**limit** - displays specified number of documents; Max limit is 100. It means that if value of \"limit\" parameter exceeds 100, response is automatically limited to 100 documents.\n<br>allowed values: integer\n\n**offset** - displays documents from specified position\n<br>allowed values: integer\n\n**subfolder-data** - defines whether sub-folders of the given folder are displayed in the response. <br>allowed values: 1, 0 (i.e. subfolder-data=1)\n\n**with_team_documents** - allows to display \"Team Documents\" folders.\n<br>allowed values: true, false (i.e. with_team_documents=true)\n\n**exclude_documents_relations** - allows to display short list of document info and increases maximum limit from 100 to 500 documents per page.\n<br>allowed values: true, false (i.e. exclude_documents_relations=false)\n\nThe short list of document info is:\n\n```\n{\n\"id\": \" \",\n\"user_id\": \" \",\n\"document_name\": \" \",\n\"page_count\": \" \",\n\"created\": \" \",\n\"updated\": \" \",\n\"original_filename\": \" \"\n}\n```\n**include_documents_subfolders** - allows to hide sub-folders and display all documents from those sub-folders in the parent folder. Parameter works only for \"Documents\" and \"Template\" folder and their children. Default value - true\n<br>allowed values: true, false\n\n\n\n**exclude_documents_relations** - when this param is true, for documents in folder won’t include relations such as fields, signatures, etc, only the main info will be displayed.\n<br>allowed values: true, false",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "folder_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/user/folder/{folder_id}": {
      "delete": {
        "tags": [
          "Folder"
        ],
        "summary": "Delete folder",
        "description": "Deletes a folder.",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "folder_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "Folder"
        ],
        "summary": "Rename folder",
        "description": "Renames a folder.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "New folder name"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "folder_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/folders/{template_folder_id}/document-templates/pinned": {
      "get": {
        "tags": [
          "Folder"
        ],
        "summary": "Get pinned templates",
        "description": "Returns all folders of a user.",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "template_folder_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/trash": {
      "delete": {
        "tags": [
          "Folder"
        ],
        "summary": "Empty trash bin folder",
        "description": "Returns all folders of a user.",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{template_id}/integration_objects": {
      "post": {
        "tags": [
          "Smart fields"
        ],
        "summary": "Add smart fields to template",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "integration_objects": [
                    {
                      "page_number": 0,
                      "font": "Arial",
                      "data": "First name",
                      "api_integration_id": "b9XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                      "line_height": 13,
                      "color": "C5E384",
                      "bold": true,
                      "italic": true,
                      "underline": false,
                      "size": 12,
                      "x": 217,
                      "y": 32
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Smart fields"
        ],
        "summary": "Delete smart fields from template",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Smart fields"
        ],
        "summary": "Get smart fields from template",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/document/{document_id}/integration/object/smartfields": {
      "post": {
        "tags": [
          "Smart fields"
        ],
        "summary": "Prefill smart fields",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "data": [
                    {
                      "field_name1": "value1"
                    },
                    {
                      "field_name2": "value2"
                    }
                  ],
                  "client_timestamp": "{{$timestamp}}}"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/documents/{document_id}/embedded-invites/{embedded_document_field_invite_id}/link": {
      "post": {
        "tags": [
          "Embedded signing"
        ],
        "summary": "Generate link for embedded invite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "auth_method": "email",
                  "link_expiration": 15
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "embedded_document_field_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/embedded-invites/{embedded_document_group_field_invite_id}/link": {
      "post": {
        "tags": [
          "Embedded signing"
        ],
        "summary": "Generate link for doc group embedded invite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "{{signer_email}}",
                  "auth_method": "none",
                  "link_expiration": 15
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "embedded_document_group_field_invite_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/team": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Create a team",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"name\\\": \\\"New team\\\",\\n    \\\"type\\\": \\\"VIEWABLE\\\"\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/team/{team_request_id}/request": {
      "put": {
        "tags": [
          "Team"
        ],
        "summary": "Accept or decline invitation to a team",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"accept\\\": true\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "team_request_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get team invite",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "team_request_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/team/{team_id}": {
      "put": {
        "tags": [
          "Team"
        ],
        "summary": "Rename team",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"name\\\": \\\"New team name\\\"\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "team_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get team",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "team_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Team"
        ],
        "summary": "Delete team",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "team_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/team/{team_id}/admin": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Grant admin permissions",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"email\\\": \\\"admin1@emaildomain.com\\\"\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "team_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/team/{team_id}/admin/{user_id}": {
      "delete": {
        "tags": [
          "Team"
        ],
        "summary": "Disable admin permissions",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "team_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/team/{team_id}/documentgroup/template/{document_group_template_id}/share": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Share document group template",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "team_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_group_template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Team"
        ],
        "summary": "Delete doc group templates for a team",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "team_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_group_template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/team/{team_id}/documentgroup/templates": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get team document group templates",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "20"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "team_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/team/{team_id}/request": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Invite user to a team",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"emails\\\": [\\n        \\\"user1@emaildomain.com\\\"\\n    ]\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "team_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/team/{team_id}/shared/document/folder": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Enable Documents folder",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "team_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Team"
        ],
        "summary": "Disable Documents folder",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "team_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/team/{team_id}/transferownership/{user_id}": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Change team primary admin",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "team_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/teams": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get user's teams",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/teams/{team_id}/admins": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get team admins",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "team_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/team/{team_id}/user/{user_id}": {
      "delete": {
        "tags": [
          "Team"
        ],
        "summary": "Delete user from the team",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "team_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/teams/{team_request_id}/request": {
      "patch": {
        "tags": [
          "Team"
        ],
        "summary": "Update team invite status",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"request_status\\\": \\\"approved\\\"\\n}\""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "team_request_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Create organization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "Test ORG"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get admin's organizations",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}": {
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "Rename organization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "New organization name"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organization"
        ],
        "summary": "Delete organization",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/admins": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get the list of admins",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Add moderator or admin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "new_user@emaildomain.com",
                  "type": "moderator"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/admins/{user_id}": {
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "Change admin/moderator role",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "type": "moderator"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/admins/{user_id}/accept": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Accept invite to be admin",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/admins/{user_id}/decline": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Decline invite to be admin",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/admins/{admin_user_id}": {
      "delete": {
        "tags": [
          "Organization"
        ],
        "summary": "Remove admin/moderator",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "admin_user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/members": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get the list of members",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Add members",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "new_user@emaildomain.com"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/members/{user_id}": {
      "delete": {
        "tags": [
          "Organization"
        ],
        "summary": "Remove members",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/members/{user_id}/accept": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Accept invite to organization",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/members/{user_id}/decline": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Decline invite to organization",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/settings": {
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "Update organization settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "setting_name": "no_document_attachment",
                  "value": "1"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get organization settings",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/allowed-team-admins": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Set an allowed team admin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "new_allowed_team_admin@emaildomain.com"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "Activate/deactivate allowed team admins",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "new_allowed_team_admin@emaildomain.com",
                  "active": true
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get allowed team admins",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/members/last-logins": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get members' last logins",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/users-activity": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get users' activity",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "date_from",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{timestamp_from}}"
          },
          {
            "name": "date_to",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{timestamp_to}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/activity": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get organization activity",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "date_from",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{timestamp_from}}"
          },
          {
            "name": "date_to",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{timestamp_to}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/logo": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Upload organization logo",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "logo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organization"
        ],
        "summary": "Delete organization logo",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{destination_organization_id}/move": {
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "Move users across organizations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "user_id": "{{user_id}}",
                  "from": "{{organization_id}}"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "destination_organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/documents/search": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get user's documents",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "[{\"signer\":{\"type\": \"=\", \"value\":\"email%40gmail.com\"}}]"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/members/last-logins/export": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Send organization login data",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "date_from",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{timestamp_from}}"
          },
          {
            "name": "date_to",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{timestamp_to}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/users-activity/export": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Send organization users activity",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "date_from",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{timestamp_from}}"
          },
          {
            "name": "date_to",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{timestamp_to}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/request-logs": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get logs",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/request-logs/{request_id}": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get request log",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "request_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/paid-request-totals": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get paid requests",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/paid-request-logs": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get paid requests logs",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/paid-request-logs/export": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Export paid request logs",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/paid-request-monthly-totals": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get monthly request totals",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/merchantaccount": {
      "post": {
        "tags": [
          "Request payments"
        ],
        "summary": "Update merchant account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "account_name": "CardConnect",
                  "account_type": "CardConnect",
                  "currency": "USD",
                  "username": "testing",
                  "password": "testing123",
                  "account_id": "800000000889",
                  "sandbox": true
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/merchantaccount/{merchant_account_id}": {
      "get": {
        "tags": [
          "Request payments"
        ],
        "summary": "Get merchant account",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "merchant_account_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Request payments"
        ],
        "summary": "Delete merchant account",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "merchant_account_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/documents/{document_id}/brand": {
      "put": {
        "tags": [
          "Branding > Branding > Assign brand resource"
        ],
        "summary": "Assign brand to document",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"brand_id\\\": \\\"{{brand_id}}\\\"\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branding > Branding > Assign brand resource"
        ],
        "summary": "Get brand of document",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branding > Branding > Assign brand resource"
        ],
        "summary": "Unassign brand from document",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/brand": {
      "put": {
        "tags": [
          "Branding > Branding > Assign brand resource"
        ],
        "summary": "Assign brand to doc group",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"brand_id\\\": \\\"{{brand_id}}\\\"\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branding > Branding > Assign brand resource"
        ],
        "summary": "Get brand of doc group",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branding > Branding > Assign brand resource"
        ],
        "summary": "Unassign brand from doc group",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/applications/{application_id}/brand": {
      "put": {
        "tags": [
          "Branding > Branding > Assign brand resource"
        ],
        "summary": "Assign brand to application",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "brand_id": "{{brand_id}}"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "application_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branding > Branding > Assign brand resource"
        ],
        "summary": "Get brand of application",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "application_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branding > Branding > Assign brand resource"
        ],
        "summary": "Unassign brand from application",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "application_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/brands": {
      "get": {
        "tags": [
          "Branding > Branding > Manage brands"
        ],
        "summary": "Get all brands",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "Branding > Branding > Manage brands"
        ],
        "summary": "Create brand",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "title": "brand_title"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/brands/{brand_id}": {
      "put": {
        "tags": [
          "Branding > Branding > Manage brands"
        ],
        "summary": "Change brand",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "title": "new_brand_title"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branding > Branding > Manage brands"
        ],
        "summary": "Get brand",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branding > Branding > Manage brands"
        ],
        "summary": "Delete brand",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/brands/template-file": {
      "get": {
        "tags": [
          "Branding > Branding > Manage brands"
        ],
        "summary": "Get brand template file",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/brands/upload-file": {
      "post": {
        "tags": [
          "Branding > Branding > Manage brands"
        ],
        "summary": "Create brand from template file",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/brands/{brand_id}/resources/general": {
      "put": {
        "tags": [
          "Branding > Branding > General brand resource"
        ],
        "summary": "Create and edit general brand resource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "header": {
                    "background": "#232323"
                  },
                  "buttons": {
                    "primary": {
                      "color": "#232323",
                      "background": "#232323",
                      "border": "#232323",
                      "hover-color": "#232323",
                      "hover-background": "#232323",
                      "hover-border": "#232323",
                      "active-color": "#232323",
                      "active-background": "#232323",
                      "active-border": "#232323"
                    },
                    "secondary": {
                      "color": "#232323",
                      "background": "#232323",
                      "border": "#232323",
                      "hover-background": "#232323",
                      "hover-color": "#232323",
                      "hover-border": "#232323",
                      "active-color": "#232323",
                      "active-background": "#232323",
                      "active-border": "#232323"
                    },
                    "default": {
                      "color": "#232323",
                      "background": "#232323",
                      "border": "#232323",
                      "hover-background": "#232323",
                      "hover-color": "#232323",
                      "hover-border": "#232323",
                      "active-color": "#232323",
                      "active-background": "#232323",
                      "active-border": "#232323"
                    },
                    "dropdown": {
                      "color": "#232323",
                      "background": "#232323",
                      "border": "#232323",
                      "hover-background": "#232323",
                      "hover-color": "#232323",
                      "hover-border": "#232323",
                      "active-color": "#232323",
                      "active-background": "#232323",
                      "active-border": "#232323"
                    }
                  },
                  "texts": {
                    "color": "#232323"
                  },
                  "icons": {
                    "color": "#232323",
                    "background": "#232323",
                    "border": "#232323",
                    "hover-background": "#232323",
                    "hover-color": "#232323",
                    "hover-border": "#232323"
                  },
                  "main-background": "#232323",
                  "consent-text": {
                    "en": "{sender_email} has invited you to fill out and sign this in one place.",
                    "es": "{sender_email} lo ha invitado a completar y firmar esto en un solo lugar.",
                    "fr": "{sender_email} vous a invité à remplir et signer ce document dans un endroit."
                  },
                  "welcome-message": {
                    "visibility": true,
                    "body-text": {
                      "en": "{sender_email} has invited you to fill out and sign this in one place.",
                      "es": "{sender_email} lo ha invitado a completar y firmar esto en un solo lugar.",
                      "fr": "{sender_email} vous a invité à remplir et signer ce document dans un endroit."
                    }
                  },
                  "help-center": {
                    "visibility": true
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branding > Branding > General brand resource"
        ],
        "summary": "Get general brand resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branding > Branding > General brand resource"
        ],
        "summary": "Delete general brand resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/brands/{brand_id}/resources/editor": {
      "put": {
        "tags": [
          "Branding > Branding > Editor brand resource"
        ],
        "summary": "Create and edit editor brand resource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "settings": {
                    "visibility": "true"
                  },
                  "decline-invite-text": {
                    "en": "You are about to decline to sign {document_name} from {invite_owner_email}.",
                    "fr": "Vous êtes sur le point de refuser de signer {document_name} de {invite_owner_email}.",
                    "es": "Estás a punto de rechazar para firmar {document_name} de {invite_owner_email}."
                  },
                  "accessibility": {
                    "visibility": "true",
                    "color": "#232323",
                    "background": "#232323",
                    "border": "#232323",
                    "active-color": "#232323",
                    "active-background": "#232323",
                    "active-border": "#232323",
                    "hover-background": "#232323",
                    "hover-color": "#232323",
                    "hover-border": "#232323",
                    "enabled": "false"
                  },
                  "navigation": {
                    "visibility": "true"
                  },
                  "progress-bar": {
                    "default-color": "#232323",
                    "completed-color": "#232323"
                  },
                  "sidebar": {
                    "background": "#ffffff",
                    "visibility": true
                  },
                  "complete-footer": {
                    "visibility": true,
                    "custom-text": {
                      "en": "You have completed all required fields. Review your document and click Finish.",
                      "es": "Has completado todos los campos obligatorios. Revisa tu documento y haz clic en Finalizar.",
                      "fr": "Vous avez rempli tous les champs obligatoires. Relisez votre document et cliquez sur Terminer."
                    }
                  },
                  "support-chat": {
                    "visibility": true
                  },
                  "complete-page": {
                    "success": {
                      "header-text": {
                        "en": "success header EN",
                        "es": "success header ES",
                        "fr": "success header FR"
                      },
                      "body-text": {
                        "en": "success body EN",
                        "es": "success body ES",
                        "fr": "success body FR"
                      }
                    },
                    "decline": {
                      "header-text": {
                        "en": "decline header EN",
                        "es": "decline header ES",
                        "fr": "decline header FR"
                      },
                      "body-text": {
                        "en": "decline body EN",
                        "es": "decline body ES",
                        "fr": "decline body FR"
                      }
                    },
                    "registration": {
                      "visibility": true
                    },
                    "button-to-signnow": {
                      "visibility": false
                    },
                    "button-download": {
                      "visibility": true
                    },
                    "sender-info": {
                      "visibility": true,
                      "contact-email": "contact@email.com",
                      "contact-name": "Contact Name"
                    },
                    "page-dimension": {
                      "percent": 150
                    },
                    "close-button": {
                      "visibility": false
                    },
                    "decline-button": {
                      "visibility": true
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branding > Branding > Editor brand resource"
        ],
        "summary": "Get editor brand resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branding > Branding > Editor brand resource"
        ],
        "summary": "Delete editor brand resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/brands/{brand_id}/resources/logo": {
      "post": {
        "tags": [
          "Branding > Branding > Logo brand resource"
        ],
        "summary": "Create logo brand resource",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "logo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branding > Branding > Logo brand resource"
        ],
        "summary": "Get logo brand resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "Branding > Branding > Logo brand resource"
        ],
        "summary": "Add and change logo from URL",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"url\\\": \\\"string\\\"\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/brands/{brand_id}/resources/logo/": {
      "delete": {
        "tags": [
          "Branding > Branding > Logo brand resource"
        ],
        "summary": "Delete logo brand resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/brands/{brand_id}/resources/email-general": {
      "put": {
        "tags": [
          "Branding > Email branding > Email general brand resource"
        ],
        "summary": "Add and edit email general branding",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "logo": {
                    "position": "middle"
                  },
                  "buttons": {
                    "color": "#ffffff",
                    "background": "#0777cf"
                  },
                  "secondary_buttons": {
                    "color": "#38424b",
                    "background": "#e3e6e9"
                  },
                  "sender_email": "mail@signnow.com",
                  "signnow_references": true,
                  "hide_download_image": false
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branding > Email branding > Email general brand resource"
        ],
        "summary": "Get email general resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branding > Email branding > Email general brand resource"
        ],
        "summary": "Delete email general resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/brands/{brand_id}/resources/email-invite": {
      "put": {
        "tags": [
          "Branding > Email branding > Email invite brand resource"
        ],
        "summary": "Add and edit branding for email invite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "en": {
                    "subject": "My custom subject {document_name}",
                    "body_header": "Body header message",
                    "body_message": "Body message {document_name}",
                    "footer_message": "Footer message EN",
                    "from": "From user ",
                    "expiration": "Expiration message {days}"
                  },
                  "fr": {
                    "subject": "My custom subject {document_name}",
                    "body_header": "Body header message",
                    "body_message": "Body message {document_name}",
                    "footer_message": "Footer message",
                    "from": "From user",
                    "expiration": "Expiration message {days}"
                  },
                  "es": {
                    "subject": "My custom subject {document_name}",
                    "body_header": "Body header message",
                    "body_message": "Body message {document_name}",
                    "footer_message": "Footer message",
                    "from": "From user",
                    "expiration": "Expiration message {days}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branding > Email branding > Email invite brand resource"
        ],
        "summary": "Get email invite resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branding > Email branding > Email invite brand resource"
        ],
        "summary": "Delete email invite resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/brands/{brand_id}/resources/email-invite-reassign": {
      "put": {
        "tags": [
          "Branding > Email branding > Email reassign brand resource"
        ],
        "summary": "Add and edit branding for reassign emails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "en": {
                    "subject": "My custom subject {document_name}",
                    "body_header": "Body header message",
                    "body_message": "Body message {document_name}",
                    "footer_message": "Footer message",
                    "forward_message": "Forward message {email_from}",
                    "from": "From user user@mail.com",
                    "expiration": "Expiration message {days}"
                  },
                  "fr": {
                    "subject": "My custom subject {document_name}",
                    "body_header": "Body header message",
                    "body_message": "Body message {document_name}",
                    "footer_message": "Footer message",
                    "forward_message": "Forward message {email_from}",
                    "from": "From user user@mail.com",
                    "expiration": "Expiration message {days}"
                  },
                  "es": {
                    "subject": "My custom subject {document_name}",
                    "body_header": "Body header message",
                    "body_message": "Body message {document_name}",
                    "footer_message": "Footer message",
                    "forward_message": "Forward message {email_from}",
                    "from": "From user user@mail.com",
                    "expiration": "Expiration message {days}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branding > Email branding > Email reassign brand resource"
        ],
        "summary": "Get email reassign resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branding > Email branding > Email reassign brand resource"
        ],
        "summary": "Delete email reassign resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/brands/{brand_id}/resources/email-invite-canceled": {
      "put": {
        "tags": [
          "Branding > Email branding > Email canceled brand resource"
        ],
        "summary": "Add and edit branding for canceled invite emails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "en": {
                    "subject": "My custom subject {document_name}",
                    "body_header": "Body header message",
                    "body_message": "Body message {document_name}",
                    "footer_message": "Footer message",
                    "from": "from_email@email.com"
                  },
                  "fr": {
                    "subject": "My custom subject {document_name}",
                    "body_header": "Body header message",
                    "body_message": "Body message {document_name}",
                    "footer_message": "Footer message",
                    "from": "from_email@email.com"
                  },
                  "es": {
                    "subject": "My custom subject {document_name}",
                    "body_header": "Body header message",
                    "body_message": "Body message {document_name}",
                    "footer_message": "Footer message",
                    "from": "from_email@email.com"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branding > Email branding > Email canceled brand resource"
        ],
        "summary": "Get email canceled resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branding > Email branding > Email canceled brand resource"
        ],
        "summary": "Delete email canceled resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/brands/{brand_id}/resources/email-invite-completed": {
      "put": {
        "tags": [
          "Branding > Email branding > Email completed brand resource"
        ],
        "summary": "Add and edit branding for completed emails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "en": {
                    "subject": "My custom subject {document_name}",
                    "body_header": "Body header message",
                    "body_message": "Body message {document_name}",
                    "footer_message": "Footer message",
                    "from": "from_email@email.com"
                  },
                  "fr": {
                    "subject": "My custom subject {document_name}",
                    "body_message": "Body message {document_name}",
                    "body_header": "Body header message",
                    "footer_message": "Footer message",
                    "from": "from_email@email.com"
                  },
                  "es": {
                    "subject": "My custom subject {document_name}",
                    "body_message": "Body message {document_name}",
                    "body_header": "Body header message",
                    "footer_message": "Footer message",
                    "from": "from_email@email.com"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branding > Email branding > Email completed brand resource"
        ],
        "summary": "Get email completed resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branding > Email branding > Email completed brand resource"
        ],
        "summary": "Delete email completed resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/brands/{brand_id}/resources/email-invite-reminder": {
      "put": {
        "tags": [
          "Branding > Email branding > Email reminder brand resource"
        ],
        "summary": "Add and edit branding for reminder emails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": "{\n    \"en\": {\n        \"subject\": \"My custom subject {document_name}\",\n        \"body_header\": \"Body header message\",\n        \"body_message\": \"Body message {document_name}\",\n        \"footer_message\": \"Footer message\",\n        \"from\": \"From user\",\n        \"expiration\": \"Expiration message {days}\"\n    },\n    \"fr\": {\n        \"subject\": \"My custom subject {document_name}\",\n        \"body_header\": \"Body header message\",\n        \"body_message\": \"Body message {document_name}\",\n        \"footer_message\": \"Footer message\",\n        \"from\": \"From user\",\n        \"expiration\": \"Expiration message\"\n    },\n    \"es\": {\n        \"subject\": \"My custom subject {document_name}\",\n        \"body_header\": \"Body header message\",\n        \"body_message\": \"Body message {document_name}\",\n        \"footer_message\": \"Footer message \",\n        \"from\": \"From user\",\n        \"expiration\": \"Expiration message {days}\"\n    }\n}{\n    \"en\": {\n        \"subject\": \"My custom subject {document_name}\",\n        \"body_header\": \"Body header message\",\n        \"body_message\": \"Body message {document_name}\",\n        \"footer_message\": \"Footer message\",\n        \"from\": \"From user\",\n        \"expiration\": \"Expiration message {days}\"\n    },\n    \"fr\": {\n        \"subject\": \"My custom subject {document_name}\",\n        \"body_header\": \"Body header message\",\n        \"body_message\": \"Body message {document_name}\",\n        \"footer_message\": \"Footer message\",\n        \"from\": \"From user\",\n        \"expiration\": \"Expiration message\"\n    },\n    \"es\": {\n        \"subject\": \"My custom subject {document_name}\",\n        \"body_header\": \"Body header message\",\n        \"body_message\": \"Body message {document_name}\",\n        \"footer_message\": \"Footer message \",\n        \"from\": \"From user\",\n        \"expiration\": \"Expiration message {days}\"\n    }\n}"
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branding > Email branding > Email reminder brand resource"
        ],
        "summary": "Get email reminder resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branding > Email branding > Email reminder brand resource"
        ],
        "summary": "Delete email reminder resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/brands/{brand_id}/resources/email-logo": {
      "post": {
        "tags": [
          "Branding > Email branding > Email-logo brand resource"
        ],
        "summary": "Create email-logo brand resource",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "logo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "Branding > Email branding > Email-logo brand resource"
        ],
        "summary": "Add and update email-logo for brand from URL",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "example": "\"{\\n    \\\"url\\\": \\\"string\\\"\\n}\""
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branding > Email branding > Email-logo brand resource"
        ],
        "summary": "Get email-logo brand resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branding > Email branding > Email-logo brand resource"
        ],
        "summary": "Delete email-logo brand resource",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/brands": {
      "post": {
        "tags": [
          "Organization branding > Manage organization brands"
        ],
        "summary": "Create organization brand",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "title": "Brand name"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Organization branding > Manage organization brands"
        ],
        "summary": "Get organization brands",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/brands/{organization_brand_id}": {
      "get": {
        "tags": [
          "Organization branding > Manage organization brands"
        ],
        "summary": "Get an organization brand",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "organization_brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "Organization branding > Manage organization brands"
        ],
        "summary": "Update an organization brand",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "title": "New brand name"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "organization_brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organization branding > Manage organization brands"
        ],
        "summary": "Delete an organization brand",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "organization_brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/brand": {
      "get": {
        "tags": [
          "Organization branding > Manage organization brands"
        ],
        "summary": "Get default organization brand",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "Organization branding > Manage organization brands"
        ],
        "summary": "Set organization brand as default",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "brand_id": "{{organization_brand_id}}"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organization branding > Manage organization brands"
        ],
        "summary": "Set organization brand as non-default",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/brands/{organization_brand_id}/resources/general": {
      "put": {
        "tags": [
          "Organization branding > Organization general brand resource"
        ],
        "summary": "Create org general brand resource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "header": {
                    "background": "#232323"
                  },
                  "buttons": {
                    "primary": {
                      "color": "#232323",
                      "background": "#232323",
                      "border": "#232323",
                      "hover-color": "#232323",
                      "hover-background": "#232323",
                      "hover-border": "#232323",
                      "active-color": "#232323",
                      "active-background": "#232323",
                      "active-border": "#232323"
                    },
                    "secondary": {
                      "color": "#232323",
                      "background": "#232323",
                      "border": "#232323",
                      "hover-background": "#232323",
                      "hover-color": "#232323",
                      "hover-border": "#232323",
                      "active-color": "#232323",
                      "active-background": "#232323",
                      "active-border": "#232323"
                    },
                    "default": {
                      "color": "#232323",
                      "background": "#232323",
                      "border": "#232323",
                      "hover-background": "#232323",
                      "hover-color": "#232323",
                      "hover-border": "#232323",
                      "active-color": "#232323",
                      "active-background": "#232323",
                      "active-border": "#232323"
                    },
                    "dropdown": {
                      "color": "#232323",
                      "background": "#232323",
                      "border": "#232323",
                      "hover-background": "#232323",
                      "hover-color": "#232323",
                      "hover-border": "#232323",
                      "active-color": "#232323",
                      "active-background": "#232323",
                      "active-border": "#232323"
                    }
                  },
                  "texts": {
                    "color": "#232323"
                  },
                  "icons": {
                    "color": "#232323",
                    "background": "#232323",
                    "border": "#232323",
                    "hover-background": "#232323",
                    "hover-color": "#232323",
                    "hover-border": "#232323"
                  },
                  "main-background": "#232323"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "organization_brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Organization branding > Organization general brand resource"
        ],
        "summary": "Get org general brand resource",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "organization_brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organization branding > Organization general brand resource"
        ],
        "summary": "Delete org general brand resource",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "organization_brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/brands/{organization_brand_id}/resources/editor": {
      "put": {
        "tags": [
          "Organization branding > Organization editor brand resource"
        ],
        "summary": "Create org editor brand resource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "settings": {
                    "visibility": true
                  },
                  "accessibility": {
                    "visibility": false,
                    "color": "#232323",
                    "background": "#232323",
                    "border": "#232323",
                    "active-color": "#232323",
                    "active-background": "#232323",
                    "active-border": "#232323",
                    "hover-background": "#232323",
                    "hover-color": "#232323",
                    "hover-border": "#232323"
                  },
                  "navigation": {
                    "visibility": true
                  },
                  "progress-bar": {
                    "default-color": "#232323",
                    "completed-color": "#232323"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "organization_brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Organization branding > Organization editor brand resource"
        ],
        "summary": "Get org editor brand resource",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "organization_brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organization branding > Organization editor brand resource"
        ],
        "summary": "Delete org editor brand resource",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "organization_brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/brands/{organization_brand_id}/resources/logo": {
      "post": {
        "tags": [
          "Organization branding > Organization logo brand resource"
        ],
        "summary": "Create org logo brand resource",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "logo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Transfer-Encoding",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "organization_brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Organization branding > Organization logo brand resource"
        ],
        "summary": "Get org logo brand resource",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "organization_brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organization branding > Organization logo brand resource"
        ],
        "summary": "Delete org logo brand resource",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "organization_brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/brands/{organization_brand_id}/resources/email": {
      "put": {
        "tags": [
          "Organization branding > Organization email brand resource"
        ],
        "summary": "Create org email brand resource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "logo": {
                    "position": "left"
                  },
                  "buttons": {
                    "color": "#232323",
                    "background": "#232323"
                  },
                  "subject": "Subject text",
                  "from": "from@email.com",
                  "body_header": "Body header text",
                  "body_message": "Body text",
                  "sender_email": "sender@email.com",
                  "signnow_references": true,
                  "footer_message": "Footer text"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "organization_brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Organization branding > Organization email brand resource"
        ],
        "summary": "Get org email brand resource",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "organization_brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organization branding > Organization email brand resource"
        ],
        "summary": "Delete org email brand resource",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "organization_brand_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/documents/{document_id}/favorites": {
      "post": {
        "tags": [
          "Favorites"
        ],
        "summary": "Mark document as favorite",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Favorites"
        ],
        "summary": "Remove document from favorites",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/document-groups/{document_group_id}/favorites": {
      "post": {
        "tags": [
          "Favorites"
        ],
        "summary": "Mark document group as favorite",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Favorites"
        ],
        "summary": "Remove document group from favorites",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "document_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/favorites": {
      "get": {
        "tags": [
          "Favorites"
        ],
        "summary": "Retrieve all favorites",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/crm/contacts": {
      "post": {
        "tags": [
          "CRM contacts"
        ],
        "summary": "Create CRM Contact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "example@mail.com",
                  "first_name": "contact name",
                  "last_name": "contact last name",
                  "description": "Any details about this person",
                  "phone": {
                    "number": "3333333333",
                    "country_code": "US"
                  },
                  "company": {
                    "name": "Marvel company",
                    "job_title": "CEO"
                  },
                  "address": {
                    "country": "US",
                    "state": "New York",
                    "city": "New york",
                    "street": "5 avenue, 17",
                    "apartment": "26",
                    "zip_code": "11111"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "CRM contacts"
        ],
        "summary": "Get the list of CRM Contacts",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/crm/contacts/{contact_id}": {
      "get": {
        "tags": [
          "CRM contacts"
        ],
        "summary": "Get CRM Contact info",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "contact_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "CRM contacts"
        ],
        "summary": "Update a CRM Contact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "example@mail.com",
                  "first_name": "contact name",
                  "last_name": "contact last name",
                  "description": "Any details about this person",
                  "phone": {
                    "number": "3333333333",
                    "country_code": "US"
                  },
                  "company": {
                    "name": "Marvel company",
                    "job_title": "CEO"
                  },
                  "address": {
                    "country": "US",
                    "state": "New York",
                    "city": "New york",
                    "street": "5 avenue, 17",
                    "apartment": "26",
                    "zip_code": "11111"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "contact_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CRM contacts"
        ],
        "summary": "Remove a CRM Contact",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "contact_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/crm/users": {
      "get": {
        "tags": [
          "CRM users"
        ],
        "summary": "Get the list of CRM users",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/crm/contacts/{contact_id}/users": {
      "get": {
        "tags": [
          "CRM users"
        ],
        "summary": "Get users by contact",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "contact_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "CRM users"
        ],
        "summary": "Share contact with other users",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "data": [
                    {
                      "email": "share_to_1@mail.com",
                      "permission": "view_only"
                    },
                    {
                      "email": "share_to_2@mail.com",
                      "permission": "view_only"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "contact_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/crm/contacts/{contact_id}/users/{user_id}": {
      "delete": {
        "tags": [
          "CRM users"
        ],
        "summary": "Revoke access to shared contact",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "contact_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/crm/contacts/{contact_id}/groups": {
      "get": {
        "tags": [
          "CRM contact groups"
        ],
        "summary": "Get contact groups list by contact",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "contact_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/crm/groups": {
      "post": {
        "tags": [
          "CRM contact groups"
        ],
        "summary": "Create contact group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "My client`s group"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "CRM contact groups"
        ],
        "summary": "Get the list of groups",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/crm/groups/{contact_group_id}": {
      "get": {
        "tags": [
          "CRM contact groups"
        ],
        "summary": "Get contacts group",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "contact_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "CRM contact groups"
        ],
        "summary": "Update contact group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "new group name"
                }
              }
            }
          }
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "contact_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CRM contact groups"
        ],
        "summary": "Remove contact group",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "contact_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/crm/groups/{contact_group_id}/contacts/{contact_id}": {
      "put": {
        "tags": [
          "CRM contact groups"
        ],
        "summary": "Add contact to group",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "contact_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "contact_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CRM contact groups"
        ],
        "summary": "Remove contact from group",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "contact_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "contact_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v2/crm/groups/{contact_group_id}/contacts": {
      "get": {
        "tags": [
          "CRM contact groups"
        ],
        "summary": "Get contacts from the group",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer {{access_token}}"
          },
          {
            "name": "contact_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    }
  }
}